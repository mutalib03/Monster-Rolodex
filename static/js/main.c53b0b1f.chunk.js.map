{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list-component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAAe,I,kBCGFA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAY,iBAAjB,UACG,qBAAKC,IAAM,UAAUC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,4BACxB,6BAAKL,EAAMI,QAAQE,OACnB,8BAAIN,EAAMI,QAAQG,MAAlB,WCHMC,EAAW,SAACR,GACzB,OAAO,qBAAKC,UAAY,YAAjB,SAEHD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAE5B,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,UCLVM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACAZ,UAAY,SACZa,KAAO,SACPF,YAAeA,EAEfG,SAAYF,MCmCDG,G,wDAtCb,aAAe,IAAD,8BACd,gBASFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SARpC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,KALF,E,qDAcd,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAS,CAACT,SAASkB,S,oBAExC,WAAU,IAAD,EAC0BC,KAAKN,MAA/Bb,EADA,EACAA,SAAUU,EADV,EACUA,YACVU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAChDA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBACjD,OAEC,sBAAK9B,UAAU,MAAf,UACC,kDACA,cAAC,EAAD,CACFW,YAAc,kBACdC,aAAgBe,KAAKf,eAElB,cAAC,EAAD,CAAUJ,SAAYoB,W,GAhCXI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c53b0b1f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport './card.styles.css' \r\n\r\nexport const Card = (props) => (\r\n    <div className = 'card-container'>\r\n       <img alt = \"monster\" src = {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n       <h2>{props.monster.name}</h2>  \r\n       <p>{props.monster.email} </p>\r\n    </div>\r\n)","import REACT from 'react'\r\nimport \"./card-list.styles.css\"\r\nimport {Card} from '../card/card.component'\r\n\r\nexport const CardList = (props) =>{ \r\nreturn(<div className = 'card-list'>\r\n     { \r\n    props.monsters.map(monster =>\r\n\r\n  <Card key = {monster.id} monster = {monster}/>\r\n        )\r\n    }\r\n  </div>)\r\n} ","import React from 'react'\r\n\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ( {placeholder, handleChange}) => (\r\n    <input \r\n    className = 'search'\r\n    type = \"search\" \r\n    placeholder = {placeholder}\r\n\r\n    onChange = {handleChange}\r\n />\r\n)","\nimport logo from './logo.svg';\nimport {CardList} from \"./components/card-list/card-list-component\"\nimport React, { Component } from 'react'\nimport {SearchBox} from './components/search-box/search-box.component'\nimport './App.css'\nclass App extends Component {\n  constructor() {\n  super()\n  \n   this.state = {\n     monsters: [],\n     searchField: \" \",   \n     }\n\n    } \n\nhandleChange = (e) => {\n  this.setState({searchField: e.target.value})\n}\n\n  componentDidMount() {\n    fetch(`https://jsonplaceholder.typicode.com/users`)\n    .then(response => response.json())\n    .then(users =>this.setState({monsters:users}))\n  }\n  render() { \n    const {monsters, searchField } = this.state;\n     const filteredMonsters = monsters.filter(monster =>\n     monster.name.toLowerCase().includes(searchField.toLowerCase()) )\n    return (\n\n     <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox \n    placeholder = 'search monsters'\n    handleChange = {this.handleChange}\n />\n       <CardList monsters = {filteredMonsters}/> \n     </div>\n    );\n   }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}